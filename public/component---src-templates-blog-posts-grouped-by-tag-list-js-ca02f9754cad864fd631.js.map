{"version":3,"sources":["webpack:///./src/templates/blog-posts-grouped-by-tag-list.js","webpack:///./src/components/frontMatter.js"],"names":["BlogGroupedByTagPaginationTemplate","data","pageContext","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","totalPage","currentPageNum","tag","totalCount","isFirst","isLast","style","display","alignItems","fontStyle","paddingLeft","rhythm","paddingRight","paddingTop","paddingBottom","backgroundColor","color","to","marginLeft","map","node","frontmatter","fields","slug","key","marginBottom","boxShadow","highlightTag","dangerouslySetInnerHTML","__html","description","excerpt","listStyle","justifyContent","marginRight","pointerEvents","textDecoration","Array","from","length","_","i","margin","padding","background","pageQuery","FrontMatter","flexWrap","marginTop","icon","faCalendarAlt","fontSize","date","tags","className","faTags","id","scale","outline","outlineColor","outlineStyle","outlineWidth"],"mappings":"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","file":"component---src-templates-blog-posts-grouped-by-tag-list-js-ca02f9754cad864fd631.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport FrontMatter from \"../components/frontMatter\"\n\nconst BlogGroupedByTagPaginationTemplate = ({ data, pageContext, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const { totalPage, currentPageNum, tag, totalCount } = pageContext;\n  const isFirst = currentPageNum === 1;\n  const isLast = currentPageNum === totalPage;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={siteTitle} />\n      <Bio />\n      <h4 style={{ display: \"flex\", alignItems: \"center\" }} >\n        <span>{\"标签：\"}</span>\n        <span style={{ \n          fontStyle: \"italic\",\n          paddingLeft: rhythm(0.6),\n          paddingRight: rhythm(0.6),\n          paddingTop: rhythm(0.1),\n          paddingBottom: rhythm(0.1),\n          backgroundColor: \"#393939\",\n          color: \"#ffffff\",\n        }}>\n          {tag}\n        </span>\n        <span style={{ \n          paddingLeft: rhythm(0.8),\n        }}>\n          {`共${totalCount}篇`}\n        </span>\n        <Link to=\"/tag-list\" style={{ marginLeft: \"auto\" }}>\n          <span style={{ \n            paddingLeft: rhythm(0.8),\n            color: \"#393939\",\n            fontStyle: \"italic\",\n          }}>\n            {`所有标签...`}\n          </span>\n        </Link>\n      </h4>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ \n                  boxShadow: `none`,\n                  color: \"#494343\" \n                }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <FrontMatter node={node} highlightTag={tag} />\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n      <ul style={{\n        listStyle: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n      }}>\n        <Link \n          style={{\n            marginRight: \"auto\",\n            pointerEvents: isFirst ? \"none\" : \"auto\", \n            textDecoration: \"none\",\n            color: isFirst ? \"grey\" : \"\",\n          }} \n          to={`/tags/${tag}/pagination/${currentPageNum - 1}`}\n        >\n          {\"← 前一页\"}\n        </Link>\n        {\n            Array.from({length: totalPage}, (_, i) => (\n                <li \n                  key={`page-${i}`}\n                  style={{margin: 0}}\n                >\n                    <Link style={{\n                        padding: rhythm(1/4),\n                        color: currentPageNum === i + 1 ? \"#ffffff\" : \"\",\n                        background: currentPageNum === i + 1 ? \"#007acc\" : \"\",\n                    }} to={`/tags/${tag}/pagination/${i + 1}`}>{i + 1}</Link>\n                </li>\n            ))\n        }\n        <Link \n          style={{\n            marginLeft: \"auto\",\n            pointerEvents: isLast ? \"none\" : \"auto\", \n            textDecoration: \"none\",\n            color: isLast ? \"grey\" : \"\",\n          }} \n          to={`/tags/${tag}/pagination/${currentPageNum + 1}`}\n        >\n            {\"后一页 →\"}\n        </Link>\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogGroupedByTagPaginationTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostGroupedByTagPagination($tag: String!, $limit: Int!, $skip: Int!) {\n    coverImage: file(\n      relativePath: { regex: \"/cover.jpg/\" }\n    ) {\n      childImageSharp {\n        fluid(maxHeight: 425, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }, limit: $limit, skip: $skip, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { rhythm, scale } from \"../utils/typography\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\" ;\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\" ;\n\nconst FrontMatter = ({ node, highlightTag = \"\" }) => ( \n    <section style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        marginTop: rhythm(-0.3),\n        marginBottom: rhythm(0.3)\n    }}>\n        <FontAwesomeIcon icon={faCalendarAlt} style={{ \n            fontSize: rhythm(0.60), \n            marginRight: rhythm(0.2),\n            marginTop: rhythm(0.3),\n            }}\n        />\n        <small style={{ fontStyle: \"italic\", marginTop: rhythm(0.3), paddingRight: rhythm(1/2) }}>\n            {node.frontmatter.date}\n        </small>\n        { node.frontmatter.tags && (\n            <Link to=\"/tag-list\" style={{ \n                boxShadow: \"none\", \n                marginTop: rhythm(0.3), \n                marginRight: rhythm(0.3), \n                marginLeft: rhythm(0.4),\n            }}>\n                <FontAwesomeIcon className=\"tagIcon\" icon={faTags} style={{ fontSize: rhythm(0.58) }} />\n            </Link>\n        )}\n        { node.frontmatter.tags && node.frontmatter.tags.map((tag, i) => (\n                <small \n                    key={`${node.id}-${i}`}\n                    className=\"tagName\" \n                    style={{ \n                        ...scale(-1/2.01),\n                        paddingRight: rhythm(1/3), \n                        paddingLeft: rhythm(1/3), \n                        paddingTop: rhythm(1/9), \n                        paddingBottom: rhythm(1/9), \n                        marginRight: rhythm(0.5), \n                        marginTop: rhythm(0.3), \n                        outline: \"solid\",\n                        outlineColor: highlightTag === tag ? \"#007acc\" : \"#4d4d4d\",\n                        outlineStyle: highlightTag === tag ? \"double\" : \"solid\",\n                        outlineWidth: rhythm(0.069),\n                    }}>\n                        <Link to={`/tags/${tag}/pagination/1`} style={{ \n                            boxShadow: \"none\", \n                            color: \"inherit\",\n                        }}>\n                            {tag}\n                        </Link>\n                </small>\n        ))}\n    </section>\n)\n\nexport default FrontMatter;"],"sourceRoot":""}