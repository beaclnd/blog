{"version":3,"sources":["webpack:///./src/components/frontMatter.js","webpack:///./src/pages/index.tsx"],"names":["FrontMatter","node","highlightTag","style","display","flexWrap","alignItems","marginTop","rhythm","marginBottom","icon","faCalendarAlt","fontSize","marginRight","fontStyle","paddingRight","frontmatter","date","tags","to","boxShadow","marginLeft","className","faTags","map","tag","i","key","id","scale","paddingLeft","paddingTop","paddingBottom","outline","outlineColor","outlineStyle","outlineWidth","color","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","coverImage","childImageSharp","fluid","fields","slug","dangerouslySetInnerHTML","__html","description","excerpt","letterSpacing","pageQuery"],"mappings":"0LA8DeA,IAvDK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,oBAAT,MAAwB,GAAxB,SAChB,6BAASC,MAAO,CACZC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,UAAWC,aAAQ,IACnBC,aAAcD,YAAO,MAErB,kBAAC,IAAD,CAAiBE,KAAMC,IAAeR,MAAO,CACzCS,SAAUJ,YAAO,IACjBK,YAAaL,YAAO,IACpBD,UAAWC,YAAO,OAGtB,2BAAOL,MAAO,CAAEW,UAAW,SAAUP,UAAWC,YAAO,IAAMO,aAAcP,YAAO,MAC7EP,EAAKe,YAAYC,MAEpBhB,EAAKe,YAAYE,MACf,kBAAC,OAAD,CAAMC,GAAG,YAAYhB,MAAO,CACxBiB,UAAW,OACXb,UAAWC,YAAO,IAClBK,YAAaL,YAAO,IACpBa,WAAYb,YAAO,MAEnB,kBAAC,IAAD,CAAiBc,UAAU,UAAUZ,KAAMa,IAAQpB,MAAO,CAAES,SAAUJ,YAAO,SAGnFP,EAAKe,YAAYE,MAAQjB,EAAKe,YAAYE,KAAKM,KAAI,SAACC,EAAKC,GAAN,OAC7C,2BACIC,IAAQ1B,EAAK2B,GAAV,IAAgBF,EACnBJ,UAAU,UACVnB,MAAK,+BACE0B,aAAO,EAAE,OADX,IAEDd,aAAcP,YAAO,EAAE,GACvBsB,YAAatB,YAAO,EAAE,GACtBuB,WAAYvB,YAAO,EAAE,GACrBwB,cAAexB,YAAO,EAAE,GACxBK,YAAaL,YAAO,IACpBD,UAAWC,YAAO,IAClByB,QAAS,QACTC,aAAchC,IAAiBuB,EAAM,UAAY,UACjDU,aAAcjC,IAAiBuB,EAAM,SAAW,QAChDW,aAAc5B,YAAO,SAErB,kBAAC,OAAD,CAAMW,GAAE,SAAWM,EAAX,gBAA+BtB,MAAO,CAC1CiB,UAAW,OACXiB,MAAO,YAENZ,U,kCCvD7B,kJA6Dea,UApDG,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAC/BC,EAAaT,EAAKS,WAAWC,gBAAgBC,MAEnD,OACE,kBAAC,IAAD,CAAQF,WAAYA,EAAYR,SAAUA,EAAUI,MAAOH,GACzD,kBAAC,IAAD,CAAKG,MAAOH,IACZ,kBAAC,IAAD,MACCI,EAAMrB,KAAI,YAAc,IAAXvB,EAAW,EAAXA,KACN2C,EAAQ3C,EAAKe,YAAY4B,OAAS3C,EAAKkD,OAAOC,KACpD,OACE,6BAASzB,IAAK1B,EAAKkD,OAAOC,MACxB,gCACE,wBACEjD,MAAO,CACLM,aAAcD,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAML,MAAO,CACXiB,UAAW,OACXiB,MAAO,WACNlB,GAAIlB,EAAKkD,OAAOC,MAChBR,IAGL,kBAAC,IAAD,CAAa3C,KAAMA,KAErB,iCACE,uBACEoD,wBAAyB,CACvBC,OAAQrD,EAAKe,YAAYuC,aAAetD,EAAKuD,gBAOzD,wBAAIrD,MAAO,CAAEM,aAAcD,YAAO,OAChC,kBAAC,OAAD,CAAML,MAAO,CACXiB,UAAW,OACXiB,MAAO,UACPvB,UAAW,SACX2C,cAAejD,YAAO,MACrBW,GAAG,iBACH,iBASJ,IAAMuC,EAAY","file":"component---src-pages-index-tsx-792cf61a01852d98e1a5.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { rhythm, scale } from \"../utils/typography\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\" ;\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\" ;\n\nconst FrontMatter = ({ node, highlightTag = \"\" }) => ( \n    <section style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        marginTop: rhythm(-0.3),\n        marginBottom: rhythm(0.3)\n    }}>\n        <FontAwesomeIcon icon={faCalendarAlt} style={{ \n            fontSize: rhythm(0.60), \n            marginRight: rhythm(0.2),\n            marginTop: rhythm(0.3),\n            }}\n        />\n        <small style={{ fontStyle: \"italic\", marginTop: rhythm(0.3), paddingRight: rhythm(1/2) }}>\n            {node.frontmatter.date}\n        </small>\n        { node.frontmatter.tags && (\n            <Link to=\"/tag-list\" style={{ \n                boxShadow: \"none\", \n                marginTop: rhythm(0.3), \n                marginRight: rhythm(0.3), \n                marginLeft: rhythm(0.4),\n            }}>\n                <FontAwesomeIcon className=\"tagIcon\" icon={faTags} style={{ fontSize: rhythm(0.58) }} />\n            </Link>\n        )}\n        { node.frontmatter.tags && node.frontmatter.tags.map((tag, i) => (\n                <small \n                    key={`${node.id}-${i}`}\n                    className=\"tagName\" \n                    style={{ \n                        ...scale(-1/2.01),\n                        paddingRight: rhythm(1/3), \n                        paddingLeft: rhythm(1/3), \n                        paddingTop: rhythm(1/9), \n                        paddingBottom: rhythm(1/9), \n                        marginRight: rhythm(0.5), \n                        marginTop: rhythm(0.3), \n                        outline: \"solid\",\n                        outlineColor: highlightTag === tag ? \"#007acc\" : \"#4d4d4d\",\n                        outlineStyle: highlightTag === tag ? \"double\" : \"solid\",\n                        outlineWidth: rhythm(0.069),\n                    }}>\n                        <Link to={`/tags/${tag}/pagination/1`} style={{ \n                            boxShadow: \"none\", \n                            color: \"inherit\",\n                        }}>\n                            {tag}\n                        </Link>\n                </small>\n        ))}\n    </section>\n)\n\nexport default FrontMatter;","// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport FrontMatter from \"../components/frontMatter\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const coverImage = data.coverImage.childImageSharp.fluid;\n\n  return (\n    <Layout coverImage={coverImage} location={location} title={siteTitle}>\n      <SEO title={siteTitle} />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ \n                  boxShadow: `none`,\n                  color: \"#494343\" \n                }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <FrontMatter node={node} />\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n      <h3 style={{ marginBottom: rhythm(3.5) }}>\n        <Link style={{\n          boxShadow: \"none\",\n          color: \"#090704\",\n          fontStyle: \"italic\",\n          letterSpacing: rhythm(0.13),\n        }} to=\"/pagination/1\">\n          {\"更多内容......\"}\n        </Link>\n      </h3>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    coverImage: file(\n      relativePath: { regex: \"/cover.jpg/\" }\n    ) {\n      childImageSharp {\n        fluid(maxHeight: 425, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}