{"componentChunkName":"component---src-templates-blog-post-js","path":"/free-tls-certificate-with-letsencrypt/","result":{"data":{"site":{"siteMetadata":{"title":"JayTsang's Blog","author":{"name":"JayTsang","summary":"who lives and works in Beijing, China."}}},"markdownRemark":{"id":"dfdcae99-8984-5dfa-b243-7d54e71f1926","excerpt":"Let’s Encrypt是免费、开放和自动化的证书颁发机构，由非盈利组织互联网安全研究小组（ISRG）负责运营。Let’s Encrypt基于ACME协议，它自己维护了证书颁发机构服务，并为我们提供了证书管理软件(ACME 客户端)，能够自动化申请域名证书，其工作原理主要分为…","html":"<p><a href=\"https://letsencrypt.org\">Let’s Encrypt</a>是免费、开放和自动化的证书颁发机构，由非盈利组织互联网安全研究小组（ISRG）负责运营。Let’s Encrypt基于<a href=\"https://tools.ietf.org/html/rfc8555\">ACME协议</a>，它自己维护了证书颁发机构服务，并为我们提供了证书管理软件(ACME 客户端)，能够自动化申请域名证书，其<a href=\"https://letsencrypt.org/zh-cn/how-it-works/\">工作原理</a>主要分为2步:</p>\n<ul>\n<li>使用证书管理软件向证书颁发机构证明服务器对域名的拥有权</li>\n<li>使用证书管理软件向证书颁发机构申请、续期或撤销域名证书</li>\n</ul>\n<p>在这里，我已经在阿里云上建立了一个云服务器（Ubuntu 16.04.3 LTS x86_64 + Nginx ）并绑定了域名，下面记录一下我为该域名申请免费证书的过程。</p>\n<h3>安装证书管理软</h3>\n<p>简单起见，我使用了<a href=\"https://Snapcraft.io/docs/getting-started\">Snap</a>来安装证书管理软件，Snap是Ubuntu的母公司Canonical推出的应用打包、安装及管理方案，可以跨各种Linux发现版本，咱也不用管各种依赖问题。</p>\n<p>我的Ubuntu版本未自带Snapd服务，因此需要先安装Snapd：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">apt</span> <span class=\"token function\">install</span> snapd\n$ <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span>:/snap/bin</code></pre></div>\n<p>然后安装证书管理软件certbot：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ snap <span class=\"token function\">install</span> --classic certbot</code></pre></div>\n<h3>申请证书</h3>\n<p>运行certbot申请证书并自动修改Nginx配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ certbot --nginx</code></pre></div>\n<p>然后：</p>\n<ul>\n<li>输入邮箱信息</li>\n<li>输入域名</li>\n</ul>\n<blockquote>\n<p>certbot将自动修改Nginx的配置，包括80端口跳转及证书、私钥路径等，若想自己手动修改Nginx配置，可以运行:\n<code class=\"language-text\">$ certbot certonly --nginx</code></p>\n</blockquote>\n<blockquote>\n<p>默认已经开启自动更新证书，可以运行下列命令测试是否开启正常:\n<code class=\"language-text\">$ certbot renew --dry-run</code></p>\n</blockquote>\n<p>重启一下Nginx, 然后就可以通过HTTPS正常访问网站了:) </p>\n<h3>参考链接</h3>\n<ol>\n<li><a href=\"https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx\">https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx</a></li>\n</ol>","frontmatter":{"title":"为网站申请免费TLS/SSL证书","date":"2021/07/11","description":"全面拥抱HTTPS的时代，没有个TLS/SSL证书还怎么愉快玩耍？Let's Encrypt为我们提供了免费的证书申请/撤销等管理服务及工具，简直不要太便利","tags":["Certificate","TLS/SSL"]},"fields":{"readingTime":{"text":"1 min read"}}}},"pageContext":{"slug":"/free-tls-certificate-with-letsencrypt/","previous":{"fields":{"slug":"/note-docker-build-with-url-error-initializing-submodules/"},"frontmatter":{"title":"笔记： 踩坑——Docker基于URL进行Build时出错"}},"next":null}}}