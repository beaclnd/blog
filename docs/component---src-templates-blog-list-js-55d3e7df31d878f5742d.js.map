{"version":3,"sources":["webpack:///./src/components/frontMatter.js","webpack:///./src/templates/blog-list.js"],"names":["FrontMatter","node","highlightTag","style","display","flexWrap","alignItems","marginTop","rhythm","marginBottom","icon","faCalendarAlt","fontSize","marginRight","fontStyle","paddingRight","frontmatter","date","tags","to","boxShadow","marginLeft","className","faTags","map","tag","i","key","id","scale","paddingLeft","paddingTop","paddingBottom","outline","outlineColor","outlineStyle","outlineWidth","color","BlogPaginationTemplate","data","pageContext","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","totalPage","coverImage","childImageSharp","fluid","currentPageNum","isFirst","isLast","fields","slug","dangerouslySetInnerHTML","__html","description","excerpt","listStyle","justifyContent","pointerEvents","textDecoration","Array","from","length","_","margin","padding","background","pageQuery"],"mappings":"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","file":"component---src-templates-blog-list-js-55d3e7df31d878f5742d.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { rhythm, scale } from \"../utils/typography\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\" ;\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\" ;\n\nconst FrontMatter = ({ node, highlightTag = \"\" }) => ( \n    <section style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        marginTop: rhythm(-0.3),\n        marginBottom: rhythm(0.3)\n    }}>\n        <FontAwesomeIcon icon={faCalendarAlt} style={{ \n            fontSize: rhythm(0.60), \n            marginRight: rhythm(0.2),\n            marginTop: rhythm(0.3),\n            }}\n        />\n        <small style={{ fontStyle: \"italic\", marginTop: rhythm(0.3), paddingRight: rhythm(1/2) }}>\n            {node.frontmatter.date}\n        </small>\n        { node.frontmatter.tags && (\n            <Link to=\"/tag-list\" style={{ \n                boxShadow: \"none\", \n                marginTop: rhythm(0.3), \n                marginRight: rhythm(0.3), \n                marginLeft: rhythm(0.4),\n            }}>\n                <FontAwesomeIcon className=\"tagIcon\" icon={faTags} style={{ fontSize: rhythm(0.58) }} />\n            </Link>\n        )}\n        { node.frontmatter.tags && node.frontmatter.tags.map((tag, i) => (\n                <small \n                    key={`${node.id}-${i}`}\n                    className=\"tagName\" \n                    style={{ \n                        ...scale(-1/2.01),\n                        paddingRight: rhythm(1/3), \n                        paddingLeft: rhythm(1/3), \n                        paddingTop: rhythm(1/9), \n                        paddingBottom: rhythm(1/9), \n                        marginRight: rhythm(0.5), \n                        marginTop: rhythm(0.3), \n                        outline: \"solid\",\n                        outlineColor: highlightTag === tag ? \"#007acc\" : \"#4d4d4d\",\n                        outlineStyle: highlightTag === tag ? \"double\" : \"solid\",\n                        outlineWidth: rhythm(0.069),\n                    }}>\n                        <Link to={`/tags/${tag}/pagination/1`} style={{ \n                            boxShadow: \"none\", \n                            color: \"inherit\",\n                        }}>\n                            {tag}\n                        </Link>\n                </small>\n        ))}\n    </section>\n)\n\nexport default FrontMatter;","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport FrontMatter from \"../components/frontMatter\"\n\nconst BlogPaginationTemplate = ({ data, pageContext, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const coverImage = data.coverImage.childImageSharp.fluid;\n  const {totalPage, currentPageNum} = pageContext;\n  const isFirst = currentPageNum === 1;\n  const isLast = currentPageNum === totalPage;\n\n  return (\n    <Layout  location={location} title={siteTitle}>\n      <SEO title={siteTitle} />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ \n                  boxShadow: `none`,\n                  color: \"#494343\" \n                }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <FrontMatter node={node} />\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n      <ul style={{\n        listStyle: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n      }}>\n        <Link \n          style={{\n            marginRight: \"auto\",\n            pointerEvents: isFirst ? \"none\" : \"auto\", \n            textDecoration: \"none\",\n            color: isFirst ? \"grey\" : \"\",\n          }} \n          to={`/pagination/${currentPageNum - 1}`}\n        >\n          {\"← 前一页\"}\n        </Link>\n        {\n            Array.from({length: totalPage}, (_, i) => (\n                <li \n                  key={`page-${i}`}\n                  style={{margin: 0}}\n                >\n                    <Link style={{\n                        padding: rhythm(1/4),\n                        color: currentPageNum === i + 1 ? \"#ffffff\" : \"\",\n                        background: currentPageNum === i + 1 ? \"#007acc\" : \"\",\n                    }} to={`/pagination/${i + 1}`}>{i + 1}</Link>\n                </li>\n            ))\n        }\n        <Link \n          style={{\n            marginLeft: \"auto\",\n            pointerEvents: isLast ? \"none\" : \"auto\", \n            textDecoration: \"none\",\n            color: isLast ? \"grey\" : \"\",\n          }} \n          to={`/pagination/${currentPageNum + 1}`}\n        >\n            {\"后一页 →\"}\n        </Link>\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogPaginationTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostPagination($limit: Int!, $skip: Int!) {\n    coverImage: file(\n      relativePath: { regex: \"/cover.jpg/\" }\n    ) {\n      childImageSharp {\n        fluid(maxHeight: 425, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: $limit, skip: $skip, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}